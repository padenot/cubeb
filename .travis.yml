language: cpp
dist: trusty
sudo: required
matrix:
  include:
    - compiler: clang
      os: linux
    - compiler: clang
      env: SCAN_BUILD=true
      os: linux
    - compiler: gcc-5
      os: linux
    - compiler: gcc-5
      env: HOST=i686-w64-mingw32
      os: linux
    - compiler: clang
      os: osx
    - compiler: clang
      env: SCAN_BUILD=true
      os: osx
    - env: ANDROID=android-ndk-r13b
      compiler: gcc-5
      os: linux
before_install:
  - if [[ -n $SCAN_BUILD ]]; then
      if [[ $TRAVIS_OS_NAME = "osx" ]]; then
        . scan-build-install.sh;
      else
        export SCAN_BUILD_PATH=/usr/share/clang/scan-build-3.8/bin/scan-build;
      fi;
      export SCAN_BUILD_PATH="$SCAN_BUILD_PATH --status-bugs";
    fi
  - if [[ -n $ANDROID ]]; then
      curl -LO https://dl.google.com/android/repository/$ANDROID-linux-x86_64.zip;
      unzip -q $ANDROID-linux-x86_64.zip;
      rm $ANDROID-linux-x86_64.zip;
      export ANDROID_NDK=$(pwd)/$ANDROID;
    fi
  - if [[ $TRAVIS_OS_NAME = "linux" ]]; then
      sudo apt-get update -qq;
      if [ -z "$HOST" ]; then
        sudo apt-get install -y libpulse-dev libasound2-dev pulseaudio doxygen;
      else
        sudo apt-get install -qq mingw-w64 mingw-w64-tools;
      fi
    fi
  - if [[ $TRAVIS_OS_NAME = "osx" ]]; then
      brew update;
      brew uninstall cmake && brew install cmake;
    fi
before_script:
  - if [[ $TRAVIS_OS_NAME = "linux" ]]; then
      if [ "$CXX" = "clang++" ]; then export CXX="clang++-3.8" CC="clang-3.8" CXXFLAGS="-stdlib=libc++"; fi
    fi
  - if [[ -n $SCAN_BUILD ]]; then
      export CCC_CC=$CC CCC_CXX=$CXX;
    fi
  - cmake --version
  - mkdir build
  - cd build
  - if [ ! -z "$HOST" ]; then
      $SCAN_BUILD_PATH cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchain-cross-mingw.cmake -DCMAKE_BUILD_TYPE=Debug ..;
    else
      if [[ -n $ANDROID ]]; then
        cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchain-cross-android.cmake -DANDROID_NATIVE_API_LEVEL=android-15 -DCMAKE_BUILD_TYPE=Debug ..;
      else
        $SCAN_BUILD_PATH cmake -DCMAKE_BUILD_TYPE=Debug VERBOSE=1 ..;
      fi;
    fi
script:
  - echo $SCAN_BUILD_PATH
  - $SCAN_BUILD_PATH make
  - if [[ $TRAVIS_OS_NAME = "linux" ]]; then
      if [ -z "$HOST" -a -z "$ANDROID" ]; then
        make test ARGS=-V;
      fi
    fi
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-5
      - g++-5
      - clang-3.8
      - libc++-dev
